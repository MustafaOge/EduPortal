// <auto-generated />
using System;
using EduPortal.Persistence.context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduPortal.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240402140748_addComplaint2")]
    partial class addComplaint2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduPortal.Domain.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReadingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("SubscriberType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("EduPortal.Domain.Entities.InvoiceComplaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("invoiceComplaints");
                });

            modelBuilder.Entity("EduPortal.Domain.Entities.MeterReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<decimal>("DayDifference")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DayFirstIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DayLastIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastIndexDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NightDifference")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NightFirstIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NightLastIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PeakDifference")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PeakFirstIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PeakLastIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReadingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReadingDayDifference")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalDifference")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalFirstIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalLastIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId")
                        .IsUnique();

                    b.ToTable("MeterReadings");
                });

            modelBuilder.Entity("EduPortal.Domain.Entities.Subscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CounterNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriberType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subscribers");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("EduPortal.Domain.Entities.SubsCorporate", b =>
                {
                    b.HasBaseType("EduPortal.Domain.Entities.Subscriber");

                    b.Property<string>("CorporateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxIdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SubsCorporates", (string)null);
                });

            modelBuilder.Entity("EduPortal.Domain.Entities.SubsIndividual", b =>
                {
                    b.HasBaseType("EduPortal.Domain.Entities.Subscriber");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SubsIndividuals", (string)null);
                });

            modelBuilder.Entity("EduPortal.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("EduPortal.Domain.Entities.Subscriber", "Subscriber")
                        .WithMany("Invoices")
                        .HasForeignKey("SubscriberId");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("EduPortal.Domain.Entities.MeterReading", b =>
                {
                    b.HasOne("EduPortal.Domain.Entities.Invoice", "Invoice")
                        .WithOne("MeterReading")
                        .HasForeignKey("EduPortal.Domain.Entities.MeterReading", "InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("EduPortal.Domain.Entities.SubsCorporate", b =>
                {
                    b.HasOne("EduPortal.Domain.Entities.Subscriber", null)
                        .WithOne()
                        .HasForeignKey("EduPortal.Domain.Entities.SubsCorporate", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EduPortal.Domain.Entities.SubsIndividual", b =>
                {
                    b.HasOne("EduPortal.Domain.Entities.Subscriber", null)
                        .WithOne()
                        .HasForeignKey("EduPortal.Domain.Entities.SubsIndividual", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EduPortal.Domain.Entities.Invoice", b =>
                {
                    b.Navigation("MeterReading")
                        .IsRequired();
                });

            modelBuilder.Entity("EduPortal.Domain.Entities.Subscriber", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
